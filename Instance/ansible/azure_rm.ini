# https://docs.ansible.com/ansible/latest/plugins/inventory/azure_rm.html
# Configuration file for azure_rm.py
#

#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
[waf]
# Control which resource groups are included. By default all resources groups are included.
# Set resource_groups to a comma separated list of resource groups names.
#resource_groups=

# Control which tags are included. Set tags to a comma separated list of keys or key:value pairs
tags=waf

# Control which locations are included. Set locations to a comma separated list (e.g. eastus,eastus2,westus)
#locations=

# Include powerstate. If you don't need powerstate information, turning it off improves runtime performance.
include_powerstate=yes

# Control grouping with the following boolean flags. Valid values: yes, no, true, false, True, False, 0, 1.
group_by_resource_group=no
group_by_location=no
group_by_security_group=no
group_by_os_family=no
group_by_tag=yes

use_private_ip=True


# adds variables to each host found by this inventory plugin, whose values are the result of the associated expression
hostvar_expressions:
  my_host_var:
# A statically-valued expression has to be both single and double-quoted, or use escaped quotes, since the outer
# layer of quotes will be consumed by YAML. Without the second set of quotes, it interprets 'staticvalue' as a
# variable instead of a string literal.
  some_statically_valued_var: "'staticvalue'"
# overrides the default ansible_host value with a custom Jinja2 expression, in this case, the first DNS hostname, or
# if none are found, the first public IP address.
  ansible_host: (public_dns_hostnames + public_ipv4_addresses) | first


#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[fw]
# Control which resource groups are included. By default all resources groups are included.
# Set resource_groups to a comma separated list of resource groups names.
#resource_groups=

# Control which tags are included. Set tags to a comma separated list of keys or key:value pairs
tags=fw

# Control which locations are included. Set locations to a comma separated list (e.g. eastus,eastus2,westus)
#locations=

# Include powerstate. If you don't need powerstate information, turning it off improves runtime performance.
include_powerstate=yes

# Control grouping with the following boolean flags. Valid values: yes, no, true, false, True, False, 0, 1.
group_by_resource_group=no
group_by_location=no
group_by_security_group=no
group_by_os_family=no
group_by_tag=yes

use_private_ip=True


# adds variables to each host found by this inventory plugin, whose values are the result of the associated expression
hostvar_expressions:
  my_host_var:
# A statically-valued expression has to be both single and double-quoted, or use escaped quotes, since the outer
# layer of quotes will be consumed by YAML. Without the second set of quotes, it interprets 'staticvalue' as a
# variable instead of a string literal.
  some_statically_valued_var: "'staticvalue'"
# overrides the default ansible_host value with a custom Jinja2 expression, in this case, the first DNS hostname, or
# if none are found, the first public IP address.
  ansible_host: (public_dns_hostnames + public_ipv4_addresses) | first



#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[admin]
# Control which resource groups are included. By default all resources groups are included.
# Set resource_groups to a comma separated list of resource groups names.
#resource_groups=

# Control which tags are included. Set tags to a comma separated list of keys or key:value pairs
tags=admin

# Control which locations are included. Set locations to a comma separated list (e.g. eastus,eastus2,westus)
#locations=

# Include powerstate. If you don't need powerstate information, turning it off improves runtime performance.
include_powerstate=yes

# Control grouping with the following boolean flags. Valid values: yes, no, true, false, True, False, 0, 1.
group_by_resource_group=no
group_by_location=no
group_by_security_group=no
group_by_os_family=no
group_by_tag=yes

use_private_ip=True


# adds variables to each host found by this inventory plugin, whose values are the result of the associated expression
hostvar_expressions:
  my_host_var:
# A statically-valued expression has to be both single and double-quoted, or use escaped quotes, since the outer
# layer of quotes will be consumed by YAML. Without the second set of quotes, it interprets 'staticvalue' as a
# variable instead of a string literal.
  some_statically_valued_var: "'staticvalue'"
# overrides the default ansible_host value with a custom Jinja2 expression, in this case, the first DNS hostname, or
# if none are found, the first public IP address.
  ansible_host: (public_dns_hostnames + public_ipv4_addresses) | first


#///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[stack_{{ stack }}]
# Control which resource groups are included. By default all resources groups are included.
# Set resource_groups to a comma separated list of resource groups names.
#resource_groups=

# Control which tags are included. Set tags to a comma separated list of keys or key:value pairs
tags=stack:{{ stack }}

# Control which locations are included. Set locations to a comma separated list (e.g. eastus,eastus2,westus)
#locations=

# Include powerstate. If you don't need powerstate information, turning it off improves runtime performance.
include_powerstate=yes

# Control grouping with the following boolean flags. Valid values: yes, no, true, false, True, False, 0, 1.
group_by_resource_group=no
group_by_location=no
group_by_security_group=no
group_by_os_family=no
group_by_tag=yes

use_private_ip=True


# adds variables to each host found by this inventory plugin, whose values are the result of the associated expression
hostvar_expressions:
  my_host_var:
# A statically-valued expression has to be both single and double-quoted, or use escaped quotes, since the outer
# layer of quotes will be consumed by YAML. Without the second set of quotes, it interprets 'staticvalue' as a
# variable instead of a string literal.
  some_statically_valued_var: "'staticvalue'"
# overrides the default ansible_host value with a custom Jinja2 expression, in this case, the first DNS hostname, or
# if none are found, the first public IP address.
  ansible_host: (public_dns_hostnames + public_ipv4_addresses) | first
